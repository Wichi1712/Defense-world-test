<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables de seleccion
window_set_caption( "Defense World");
//window_set_fullscreen( true);
display_set_gui_size(840,680);//esto es para el evento draw gui

//start_menu   - menu de inicio
//game_new     - Nuevo juego
//instructions - Instrucciones
//game_option  - Opciones

global.strEstadoJuego = "inicio";

//Pantalla completa por defecto
pantallaCompleta = true;
window_set_fullscreen(pantallaCompleta);

OpcionesMenu = 0;

arrMenu[0] = "Nuevo Juego";
arrMenu[1] = "Instrucciones";
arrMenu[2] = "Opciones";
arrMenu[3] = "Modo Mapa";
arrMenu[4] = "Salir";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Agregamos musica de fondo
audio_play_music( Creep ,true);//musica de fondo
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selector de opciones
DirArriba = keyboard_check_pressed( vk_up);
DirAbajo = keyboard_check_pressed( vk_down);
Aceptar = keyboard_check_pressed( vk_enter);
CualquierBoton = keyboard_check_pressed( vk_anykey);
espacio = keyboard_check_pressed( vk_space);

 
//keyRestart = keyboard_check_pressed( ord("R"));
//if ( keyRestart) game_restart();

//Tama√±o de pantalla
if(espacio){
    if(pantallaCompleta)pantallaCompleta=false;
    else if(!pantallaCompleta)pantallaCompleta=true;
    
    window_set_fullscreen(pantallaCompleta);
} 


switch (global.strEstadoJuego)
{

case "inicio":
  if(CualquierBoton) global.strEstadoJuego = "menu";
break;

//controles en modo menu
case "menu":


if ( DirArriba)
{
      if ( OpcionesMenu &gt; 0) OpcionesMenu--;
}
    
if ( DirAbajo)
{
      if ( OpcionesMenu &lt; array_length_1d( arrMenu) -1) OpcionesMenu++;
}
    
if (Aceptar)
{
   switch(OpcionesMenu)
        {
          case 0:
            room_goto( rom_desierto);//Pasamos a la  primera room--&gt;Desierto
            audio_stop_music();//Detenemos sonido
          break; 
          
          case 1:
            global.strEstadoJuego = "Instrucciones"
          break;
          
          case 2:
            //room_goto( rom_opciones);
            global.strEstadoJuego = "Opciones";
          break;
          
          case 3:
            room_goto( rom_mapa);//Pasamos a la room de mapa
            audio_stop_music();//Detenemos sonido
          break;
          
          case 4:
            game_end();
          break;
        }
}

break;
    
case"Instrucciones":
  if(Aceptar) global.strEstadoJuego = "menu";//Si pulsamos ENTER volvemos al menu
break;

case"Opciones":
    if(Aceptar) global.strEstadoJuego = "menu";//Si pulsamos ENTER volvemos al menu
    
break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibuja opciones de menu
draw_set_font( font_pausa);
draw_set_halign( fa_center);

//Texto para Instrucciones
txtInstrucciones = "Movimientos y disparo:#&lt;= Izquierda#=&gt; Derecha#Arriba para saltar#A disparar#ESCAPE pausar el juego";
strSalirInstrucciones ="Pulse ENTER para volver al menu";
txtInicio = "Pulse cualquier tecla para comenzar";
txtDesarrollador ="Desarrollado por Wilfredo Chipana 2018";

//Texto para Opciones
txtOpciones = "Estas son las opciones:#ESPACIO para maximizar o minimizar pantalla.#Lo siento es todo por el momento.";
strSalirOpciones ="Pulse ENTER para volver al menu";

switch (global.strEstadoJuego)
{
//pantalla de inicio
case "inicio":
   //Dibuja logo inicio
   draw_background( bg_nocturno,0,0);
   //draw_background_stretched( bg_nocturno,x,y, room_width, room_height);
   draw_set_color( c_green);
   draw_text_transformed( room_width div 2, 100, "Defense World", 2.05, 3.1, 20);//crea sombra
   draw_set_color( c_blue);
   draw_text_transformed( room_width div 2, 100, "Defense World", 2, 3, 20);
   //Fin logo

   //Mensaje para usuario
     draw_set_color( c_black);
     draw_text( room_width div 2, 500, txtInicio);
     draw_set_color( c_white);
     draw_text( room_width div 2 - 1, 500 - 1, txtInicio);
     
     draw_set_font(font_pequeno);
     draw_set_color( c_white);
     draw_text( room_width div 2, 600, txtDesarrollador);
     //draw_set_color( c_white);
     //draw_text( room_width div 2 - 1, 600 - 1, txtDesarrollador);
   //Fin mensaje para usuario
break;
//Fin pantalla de inicio

case "menu":
   //Dibuja logo
   draw_background_stretched( bg_fondoMenu,x,y, room_width, room_height);
   //draw_rectangle_color(0,0, room_width, room_height, c_white,c_black,c_black,0,1);
   //Dibuja una imagen del tanque en la esquina inferior derecha
   //draw_sprite_ext( spr_tanque_stop, 0, room_width div 2 + 290, room_height div 2 + 190, 2, 2, 0, c_dkgray, 1);

   //Texto titulo  
   draw_set_color( c_black);
   draw_text_transformed( room_width div 2, 100, "Defense World", 2.05, 3.1, 20);//crea sombra
   draw_set_color( c_aqua);
   draw_text_transformed( room_width div 2, 100, "Defense World", 2, 3, 20);
   //Fin logo
  
   //Inicio texto de opciones
   distanTexto = 30;//Indica la distancia entre linea de texto

   for(var i = 0; i &lt; array_length_1d( arrMenu); i++)
   { 
    //Color de texto de opciones
    //draw_set_color( c_orange);
    //draw_text( room_width div 2 - 5, 400 + i * distanTexto, arrMenu[i]);//sombra izquierda
    //draw_text( room_width div 2 + 5, 400 + i * distanTexto, arrMenu[i]);//sombra derecha
    draw_set_color( c_orange);
    draw_text( room_width div 2, 400 + i * distanTexto, arrMenu[i]);

    //draw_rectangle(room_width div 2 - 100, 400 + i * distanTexto, room_width div 2 + 100,500 + i * distanTexto,0 );
      
    //indicador
    if ( OpcionesMenu ==i) draw_sprite( spr_selectorizquierda , 0, room_width div 2 -130, 425 + i * distanTexto);//lado izquierdo
    if ( OpcionesMenu ==i) draw_sprite( spr_selectorderecho , 0, room_width div 2 +130, 425 + i * distanTexto);//lado derecho
   } 
break;

//Inicio pantalla de instrucciones

case "Instrucciones":
   //Dibuja fondo
   //draw_rectangle_color(0,0, room_width, room_height, 0,c_black,c_white,c_black,0 );
   //draw_sprite_ext( spr_tanque_stop, 0, room_width div 2 + 290, room_height div 2 + 190, 2, 2, 0, c_dkgray, 0.6);
   ///draw_sprite_ext( spr_tanque_stop, 0, room_width div 2, room_height div 4 - 75, 2, 2, 0, c_white, 1);
   draw_background(bg_fondoMenu0,0,0);
        
   draw_set_color( c_dkgray);
   draw_text_transformed( room_width div 2, 20, "Instrucciones", 2.05, 3.1, 0);//crea sombra
   draw_set_color( c_blue);
   draw_text_transformed( room_width div 2, 20, "Instrucciones", 2, 3, 0);
   //Fin logo

   //Texto de intrucciones
   draw_set_color( c_white);
   draw_text( room_width div 2 - 1, room_height div 2 - 100, txtInstrucciones);
   //Fin texto de instrucciones

   //Mensaje para usuario
   draw_set_color( c_black);
   draw_text( room_width div 2, 600, strSalirInstrucciones);
   draw_set_color( c_white);
   draw_text( room_width div 2 - 1, 600 - 1, strSalirInstrucciones);
   //Fin mensaje para usuario
break;

case "Opciones":
   //Dibuja fondo
   //draw_rectangle_color(0,0, room_width, room_height, c_white,c_black,c_black, c_black,0 );
   //draw_sprite_ext( spr_tanque_stop, 0, room_width div 2 + 290, room_height div 2 + 190, 2, 2, 0, c_dkgray, 0.6);
   ///draw_sprite_ext( spr_tanque_stop, 0, room_width div 2, room_height div 4 - 75, 2, 2, 0, c_white, 1);
   draw_background(bg_fondoMenu0,0,0);
     
   draw_set_color( c_dkgray);
   draw_text_transformed( room_width div 2, 20, "Opciones", 2.05, 3.1, 0);//crea sombra
   draw_set_color( c_blue);
   draw_text_transformed( room_width div 2, 20, "Opciones", 2, 3, 0);
   //Fin logo

   //Texto de intrucciones
   draw_set_color( c_white);
   draw_text( room_width div 2 - 1, room_height div 2 - 100, txtOpciones);
   //Fin texto de instrucciones

   //Mensaje para usuario
   draw_set_color( c_black);
   draw_text( room_width div 2, 600, strSalirOpciones);
   draw_set_color( c_white);
   draw_text( room_width div 2 - 1, 600 - 1, strSalirOpciones);
   //Fin mensaje para usuario
break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
