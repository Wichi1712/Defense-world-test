<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_balaBossMarino</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>par_balaboss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//motion_set(270, 5);

//rebote = 0;

//if ( rebote =  1)
//{
    //motion_set( direction, 5); 
    //image_angle = direction;
    //direction = choose(+6, -6);
    //direction -=6;
//}
estado = 0;
alarm[0] = room_speed * 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambio rebote a 1
//rebote = 1;
//image_angle = 270;
estado = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
Con este codigo se puede crear un efecto de burbujas
que se elevan en diferentes direcciones.

Esto funciona con evento alarma que cambia una variable
a true.
La alarma se activa  al colisionar contra un objeto
*/

//ranDir = random_range(+6, -6);

//if ( rebote =  true)
//{
   //motion_set( direction, speed); 
   //image_angle = direction;      
   //direction +=ranDir;
//}
/*Fin burbujas*/


//ranDir = random(choose( 6,  -6 ));
//ranDir1 = direction ++;
//ranDir2 = direction --;

//if ( rebote =  1)
//{
switch ( estado)
{
case 0 :
    motion_set( direction, 5); 
    image_angle = direction;
    direction -=6;
    break;
    
case 1:
    motion_set( 270, 7);
    
    break;
}
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_base">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destruye instancia y crea efecto
//alarm[0] = room_speed / 3;
//move_bounce_solid(false);

instance_destroy();
effect_create_below( ef_explosion, x, y, 1, c_silver);
//effect_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_balaplayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destruye instancia

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>68</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//Fire
pFX_PS_Fire = part_system_create();
pFX_PT_Fire = part_type_create();
pFX_Emitter_Fire = part_emitter_create(pFX_PS_Fire);

//Smoke
pFX_PS_Smoke = part_system_create();
pFX_PT_Smoke = part_type_create();
pFX_Emitter_Smoke = part_emitter_create(pFX_PS_Smoke);

//Dark Smoke
pFX_PS_Smoke_Dark = part_system_create();
pFX_PT_Smoke_Dark = part_type_create();
pFX_Emitter_Smoke_Dark = part_emitter_create(pFX_PS_Smoke_Dark);

//Explosion
pFX_PS_explosion = part_system_create();
pFX_PT_explosion_smoke = part_type_create();
pFX_PT_explosion_fires = part_type_create();
pFX_PT_explosion_center = part_type_create();

//Blood
pFX_PS_Blood = part_system_create();
pFX_PT_Blood = part_type_create();
pFX_Emitter_Blood = part_emitter_create(pFX_PS_Blood);

//Magical Hit
pFX_PS_Magical01 = part_system_create();
pFX_PT1_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT2_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT3_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);


//Bubble
pFX_PS_Bubble = part_system_create();
pFX_PT_Bubble = part_type_create();
pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);

//Personal
pFX_PS_SpriteReflection = part_system_create();
pFX_PT_SpriteReflection = part_type_create();
pFX_Emitter_SpriteReflection = part_emitter_create(pFX_PS_SpriteReflection);</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>777060</libid>
        <id>4</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//KEY: PD = Particle Depth

{ 

globalvar pFX_XXp_explosion, pFX_YYp_explosion, pFX_size_explosion, pFX_streng_explosion, pFX_PD_explosion;
pFX_XXp_explosion = argument0;
pFX_YYp_explosion = argument1;
pFX_size_explosion = argument2;
pFX_streng_explosion = argument3;
pFX_PD_explosion = argument4;


if (argument3 == 0)
    {
    pFX_streng_explosion = 0;
    } else
if (argument3 == 1)
    {
    pFX_streng_explosion = 4+(2);
    } else
if (argument3 == 2)
    {
    pFX_streng_explosion = 8+irandom(3);
    }
    
//if (pFX_size_explosion &lt;= 40) {pFX_size_explosion = 40;}

//pFX_PS_explosion = part_system_create();
part_system_depth(pFX_PS_explosion, pFX_PD_explosion);

//pFX_PT_explosion_smoke = part_type_create();
part_type_shape(pFX_PT_explosion_smoke,pt_shape_explosion);
part_type_size(pFX_PT_explosion_smoke,0.10,0.10,0.04,0);
part_type_scale(pFX_PT_explosion_smoke,1,1);
part_type_color2(pFX_PT_explosion_smoke,8421504,2039596);
part_type_alpha3(pFX_PT_explosion_smoke,0.01,0.70,0.01);
part_type_speed(pFX_PT_explosion_smoke,0,0,0,0);
part_type_direction(pFX_PT_explosion_smoke,0,0,0,0);
part_type_gravity(pFX_PT_explosion_smoke,0,270);
part_type_orientation(pFX_PT_explosion_smoke,0,0,0,0,1);
part_type_blend(pFX_PT_explosion_smoke,0);
part_type_life(pFX_PT_explosion_smoke,10+pFX_size_explosion,20+pFX_size_explosion);

//pFX_PT_explosion_fires = part_type_create();
part_type_shape(pFX_PT_explosion_fires,pt_shape_explosion);
part_type_size(pFX_PT_explosion_fires,0.10,0.10,0.01,0.04);
part_type_scale(pFX_PT_explosion_fires,1,1);
part_type_color3(pFX_PT_explosion_fires,16777215,229628,66);
part_type_alpha3(pFX_PT_explosion_fires,1,0.30,0.10);
part_type_speed(pFX_PT_explosion_fires,1,1,0,0);
part_type_direction(pFX_PT_explosion_fires,0,359,0,0);
part_type_gravity(pFX_PT_explosion_fires,0,270);
part_type_orientation(pFX_PT_explosion_fires,0,2,2,2,1);
part_type_blend(pFX_PT_explosion_fires,1);
part_type_life(pFX_PT_explosion_fires,1+pFX_size_explosion,20+pFX_size_explosion);

//pFX_PT_explosion_center = part_type_create();
part_type_shape(pFX_PT_explosion_center,pt_shape_explosion);
part_type_size(pFX_PT_explosion_center,0.10,0.10,0.02,0);
part_type_scale(pFX_PT_explosion_center,1,1);
part_type_color3(pFX_PT_explosion_center,16777215,21503,64);
part_type_alpha2(pFX_PT_explosion_center,0.20,0.01);
part_type_speed(pFX_PT_explosion_center,0,0,0,0);
part_type_direction(pFX_PT_explosion_center,0,0,0,0);
part_type_gravity(pFX_PT_explosion_center,0,270);
part_type_orientation(pFX_PT_explosion_center,0,0,0,0,1);
part_type_blend(pFX_PT_explosion_center,1);
part_type_life(pFX_PT_explosion_center,1+pFX_size_explosion,10+pFX_size_explosion);

part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_smoke,1+pFX_streng_explosion);
part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_fires,20+pFX_streng_explosion);
part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_center,5+pFX_streng_explosion);

}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>40</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-100000</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>31</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>{
globalvar pFX_XXp_Bubble, pFX_YYp_Bubble, pFX_Scale_Bubble, pFX_Life_Bubble, pFX_Gravity_Bubble, pFX_Dir_Bubble, pFX_Blend_Bubble, pFX_Depth_Bubble;
pFX_XXp_Bubble = argument0;
pFX_YYp_Bubble = argument1;
pFX_Scale_Bubble = argument2;
pFX_Life_Bubble = argument3;
pFX_Gravity_Bubble = argument4;
pFX_Dir_Bubble = argument5;
pFX_Blend_Bubble = 1;
pFX_Depth_Bubble = -100000;

//pFX_PS_Bubble = part_system_create();
part_system_depth(pFX_PS_Bubble, pFX_Depth_Bubble);

//pFX_PT_Bubble = part_type_create();
part_type_shape(pFX_PT_Bubble,pt_shape_ring);
part_type_size(pFX_PT_Bubble,0.10,0.10,0,0);
part_type_scale(pFX_PT_Bubble,pFX_Scale_Bubble,pFX_Scale_Bubble);
part_type_color3(pFX_PT_Bubble,16755285,15923394,16367063);
part_type_alpha3(pFX_PT_Bubble,0.45,0.60,0.40);
part_type_speed(pFX_PT_Bubble,1,5-pFX_Gravity_Bubble,0,0);
part_type_direction(pFX_PT_Bubble,0,359,1,0);
part_type_gravity(pFX_PT_Bubble,pFX_Gravity_Bubble,pFX_Dir_Bubble);
part_type_orientation(pFX_PT_Bubble,0,359,20,20,1);
part_type_blend(pFX_PT_Bubble,pFX_Blend_Bubble);
part_type_life(pFX_PT_Bubble,pFX_Life_Bubble+1,pFX_Life_Bubble+1);

//pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);
part_emitter_region(pFX_PS_Bubble,pFX_Emitter_Bubble,pFX_XXp_Bubble,pFX_XXp_Bubble,pFX_YYp_Bubble,pFX_YYp_Bubble,0,0);
part_emitter_burst(pFX_PS_Bubble,pFX_Emitter_Bubble,pFX_PT_Bubble,1);
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>60</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.01</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>270</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>32</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>{
if !part_type_exists(pFX_PT_Bubble) exit;

var pFX_Blend_Bubble;
pFX_Blend_Bubble = argument0;

var pFX_Depth_Bubble;
pFX_Depth_Bubble = argument1;
part_system_depth(pFX_PS_Bubble, pFX_Depth_Bubble);

part_type_blend(pFX_PT_Bubble,pFX_Blend_Bubble);

if (pFX_Blend_Bubble == 0) {part_type_alpha3(pFX_PT_Bubble,0.55,0.70,0.50);}
else
{part_type_alpha3(pFX_PT_Bubble,0.45,0.60,0.40);}
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tanque">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>777060</libid>
        <id>68</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//Fire
pFX_PS_Fire = part_system_create();
pFX_PT_Fire = part_type_create();
pFX_Emitter_Fire = part_emitter_create(pFX_PS_Fire);

//Smoke
pFX_PS_Smoke = part_system_create();
pFX_PT_Smoke = part_type_create();
pFX_Emitter_Smoke = part_emitter_create(pFX_PS_Smoke);

//Dark Smoke
pFX_PS_Smoke_Dark = part_system_create();
pFX_PT_Smoke_Dark = part_type_create();
pFX_Emitter_Smoke_Dark = part_emitter_create(pFX_PS_Smoke_Dark);

//Explosion
pFX_PS_explosion = part_system_create();
pFX_PT_explosion_smoke = part_type_create();
pFX_PT_explosion_fires = part_type_create();
pFX_PT_explosion_center = part_type_create();

//Blood
pFX_PS_Blood = part_system_create();
pFX_PT_Blood = part_type_create();
pFX_Emitter_Blood = part_emitter_create(pFX_PS_Blood);

//Magical Hit
pFX_PS_Magical01 = part_system_create();
pFX_PT1_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT2_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT3_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);


//Bubble
pFX_PS_Bubble = part_system_create();
pFX_PT_Bubble = part_type_create();
pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);

//Personal
pFX_PS_SpriteReflection = part_system_create();
pFX_PT_SpriteReflection = part_type_create();
pFX_Emitter_SpriteReflection = part_emitter_create(pFX_PS_SpriteReflection);</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>777060</libid>
        <id>4</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//KEY: PD = Particle Depth

{ 

globalvar pFX_XXp_explosion, pFX_YYp_explosion, pFX_size_explosion, pFX_streng_explosion, pFX_PD_explosion;
pFX_XXp_explosion = argument0;
pFX_YYp_explosion = argument1;
pFX_size_explosion = argument2;
pFX_streng_explosion = argument3;
pFX_PD_explosion = argument4;


if (argument3 == 0)
    {
    pFX_streng_explosion = 0;
    } else
if (argument3 == 1)
    {
    pFX_streng_explosion = 4+(2);
    } else
if (argument3 == 2)
    {
    pFX_streng_explosion = 8+irandom(3);
    }
    
//if (pFX_size_explosion &lt;= 40) {pFX_size_explosion = 40;}

//pFX_PS_explosion = part_system_create();
part_system_depth(pFX_PS_explosion, pFX_PD_explosion);

//pFX_PT_explosion_smoke = part_type_create();
part_type_shape(pFX_PT_explosion_smoke,pt_shape_explosion);
part_type_size(pFX_PT_explosion_smoke,0.10,0.10,0.04,0);
part_type_scale(pFX_PT_explosion_smoke,1,1);
part_type_color2(pFX_PT_explosion_smoke,8421504,2039596);
part_type_alpha3(pFX_PT_explosion_smoke,0.01,0.70,0.01);
part_type_speed(pFX_PT_explosion_smoke,0,0,0,0);
part_type_direction(pFX_PT_explosion_smoke,0,0,0,0);
part_type_gravity(pFX_PT_explosion_smoke,0,270);
part_type_orientation(pFX_PT_explosion_smoke,0,0,0,0,1);
part_type_blend(pFX_PT_explosion_smoke,0);
part_type_life(pFX_PT_explosion_smoke,10+pFX_size_explosion,20+pFX_size_explosion);

//pFX_PT_explosion_fires = part_type_create();
part_type_shape(pFX_PT_explosion_fires,pt_shape_explosion);
part_type_size(pFX_PT_explosion_fires,0.10,0.10,0.01,0.04);
part_type_scale(pFX_PT_explosion_fires,1,1);
part_type_color3(pFX_PT_explosion_fires,16777215,229628,66);
part_type_alpha3(pFX_PT_explosion_fires,1,0.30,0.10);
part_type_speed(pFX_PT_explosion_fires,1,1,0,0);
part_type_direction(pFX_PT_explosion_fires,0,359,0,0);
part_type_gravity(pFX_PT_explosion_fires,0,270);
part_type_orientation(pFX_PT_explosion_fires,0,2,2,2,1);
part_type_blend(pFX_PT_explosion_fires,1);
part_type_life(pFX_PT_explosion_fires,1+pFX_size_explosion,20+pFX_size_explosion);

//pFX_PT_explosion_center = part_type_create();
part_type_shape(pFX_PT_explosion_center,pt_shape_explosion);
part_type_size(pFX_PT_explosion_center,0.10,0.10,0.02,0);
part_type_scale(pFX_PT_explosion_center,1,1);
part_type_color3(pFX_PT_explosion_center,16777215,21503,64);
part_type_alpha2(pFX_PT_explosion_center,0.20,0.01);
part_type_speed(pFX_PT_explosion_center,0,0,0,0);
part_type_direction(pFX_PT_explosion_center,0,0,0,0);
part_type_gravity(pFX_PT_explosion_center,0,270);
part_type_orientation(pFX_PT_explosion_center,0,0,0,0,1);
part_type_blend(pFX_PT_explosion_center,1);
part_type_life(pFX_PT_explosion_center,1+pFX_size_explosion,10+pFX_size_explosion);

part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_smoke,1+pFX_streng_explosion);
part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_fires,20+pFX_streng_explosion);
part_particles_create(pFX_PS_explosion,pFX_XXp_explosion,pFX_YYp_explosion,pFX_PT_explosion_center,5+pFX_streng_explosion);

}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>40</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-100000</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>31</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>{
globalvar pFX_XXp_Bubble, pFX_YYp_Bubble, pFX_Scale_Bubble, pFX_Life_Bubble, pFX_Gravity_Bubble, pFX_Dir_Bubble, pFX_Blend_Bubble, pFX_Depth_Bubble;
pFX_XXp_Bubble = argument0;
pFX_YYp_Bubble = argument1;
pFX_Scale_Bubble = argument2;
pFX_Life_Bubble = argument3;
pFX_Gravity_Bubble = argument4;
pFX_Dir_Bubble = argument5;
pFX_Blend_Bubble = 1;
pFX_Depth_Bubble = -100000;

//pFX_PS_Bubble = part_system_create();
part_system_depth(pFX_PS_Bubble, pFX_Depth_Bubble);

//pFX_PT_Bubble = part_type_create();
part_type_shape(pFX_PT_Bubble,pt_shape_ring);
part_type_size(pFX_PT_Bubble,0.10,0.10,0,0);
part_type_scale(pFX_PT_Bubble,pFX_Scale_Bubble,pFX_Scale_Bubble);
part_type_color3(pFX_PT_Bubble,16755285,15923394,16367063);
part_type_alpha3(pFX_PT_Bubble,0.45,0.60,0.40);
part_type_speed(pFX_PT_Bubble,1,5-pFX_Gravity_Bubble,0,0);
part_type_direction(pFX_PT_Bubble,0,359,1,0);
part_type_gravity(pFX_PT_Bubble,pFX_Gravity_Bubble,pFX_Dir_Bubble);
part_type_orientation(pFX_PT_Bubble,0,359,20,20,1);
part_type_blend(pFX_PT_Bubble,pFX_Blend_Bubble);
part_type_life(pFX_PT_Bubble,pFX_Life_Bubble+1,pFX_Life_Bubble+1);

//pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);
part_emitter_region(pFX_PS_Bubble,pFX_Emitter_Bubble,pFX_XXp_Bubble,pFX_XXp_Bubble,pFX_YYp_Bubble,pFX_YYp_Bubble,0,0);
part_emitter_burst(pFX_PS_Bubble,pFX_Emitter_Bubble,pFX_PT_Bubble,1);
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>60</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.01</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>270</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>32</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>{
if !part_type_exists(pFX_PT_Bubble) exit;

var pFX_Blend_Bubble;
pFX_Blend_Bubble = argument0;

var pFX_Depth_Bubble;
pFX_Depth_Bubble = argument1;
part_system_depth(pFX_PS_Bubble, pFX_Depth_Bubble);

part_type_blend(pFX_PT_Bubble,pFX_Blend_Bubble);

if (pFX_Blend_Bubble == 0) {part_type_alpha3(pFX_PT_Bubble,0.55,0.70,0.50);}
else
{part_type_alpha3(pFX_PT_Bubble,0.45,0.60,0.40);}
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
